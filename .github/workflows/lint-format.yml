name: Lint and Format

on:
  push:
    branches: [dev]
  pull_request:
    branches: [next, main]

permissions:
  contents: read

concurrency:
  group: lint-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.filter.outputs.run }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            run:
              - '**'
              - '!README.md'
              - '!LICENSE'
              - '!docs/**'
              - '!.github/**'

  lint-and-format:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: changes
    if: needs.changes.outputs.run == 'true'

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: npm-dev-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-dev-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-dev-

      - name: Install dev deps only
        run: npm ci --only=dev --prefer-offline

      - name: Run Prettier check
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint

  test-passed:
    if: (!cancelled() && !failure())
    needs: lint-and-format
    runs-on: ubuntu-latest
    name: Lint & Format Check Passed or Skipped
    steps:
      - run: echo "Lint & Format Check Passed or Skipped"

  test-failed:
    if: (!cancelled() && failure())
    needs: lint-and-format
    runs-on: ubuntu-latest
    name: Lint & Format Check Failed
    steps:
      - run: echo "Lint & Format Check Failed"
