name: Integration Test

on:
  pull_request:
    branches: [next, main]
    paths-ignore: [README.md, LICENSE, 'docs/**', '.github/**']
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: pr-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get_node_versions:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      node_versions: ${{ steps.parse.outputs.node_versions }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install deps
        run: npm ci --prefer-offline

      - name: Parse Node engines
        id: parse
        run: |
          node_versions_str=$(jq -r '.engines.node' "package.json")
          echo "Upstream engines.node = $node_versions_str"

          # Use semver to extract lowest versions per range
          node_versions=$(node -e "
          const semver = require('semver');
          const range = process.argv[1];
          const parts = range.split('||').map(r => r.trim());
          const mins = parts.map(r => semver.minVersion(r).version);
          console.log(JSON.stringify(mins));
          " "$node_versions_str")

          echo "Lowest versions: $node_versions"
          echo "node_versions=$node_versions" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: get_node_versions
    timeout-minutes: 30
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        node-version: ${{ fromJSON(needs.get_node_versions.outputs.node_versions) }}
        include:
          # Active LTS + other OS
          - os: macos-latest
            node_version: 22
          - os: windows-latest
            node_version: 22
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: package-lock.json
      - run: npm ci --no-audit --no-fund --prefer-offline
      - run: npm run build
      - run: npm run test:ci
